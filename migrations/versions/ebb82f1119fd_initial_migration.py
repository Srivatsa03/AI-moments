"""Initial migration

Revision ID: ebb82f1119fd
Revises: 
Create Date: 2025-02-15 21:49:01.392378

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ebb82f1119fd'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_permission')),
    sa.UniqueConstraint('name', name=op.f('uq_permission_name'))
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_role')),
    sa.UniqueConstraint('name', name=op.f('uq_role_name'))
    )
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tag'))
    )
    with op.batch_alter_table('tag', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tag_name'), ['name'], unique=True)

    op.create_table('role_permission',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], name=op.f('fk_role_permission_permission_id_permission'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name=op.f('fk_role_permission_role_id_role'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('role_id', 'permission_id', name=op.f('pk_role_permission'))
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=254), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('website', sa.String(length=255), nullable=True),
    sa.Column('bio', sa.String(length=120), nullable=True),
    sa.Column('location', sa.String(length=50), nullable=True),
    sa.Column('member_since', sa.DateTime(), nullable=False),
    sa.Column('avatar_s', sa.String(length=64), nullable=True),
    sa.Column('avatar_m', sa.String(length=64), nullable=True),
    sa.Column('avatar_l', sa.String(length=64), nullable=True),
    sa.Column('avatar_raw', sa.String(length=64), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=False),
    sa.Column('locked', sa.Boolean(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('public_collections', sa.Boolean(), nullable=False),
    sa.Column('receive_comment_notification', sa.Boolean(), nullable=False),
    sa.Column('receive_follow_notification', sa.Boolean(), nullable=False),
    sa.Column('receive_collect_notification', sa.Boolean(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name=op.f('fk_user_role_id_role')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user'))
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('follow',
    sa.Column('follower_id', sa.Integer(), nullable=False),
    sa.Column('followed_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['followed_id'], ['user.id'], name=op.f('fk_follow_followed_id_user'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['follower_id'], ['user.id'], name=op.f('fk_follow_follower_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('follower_id', 'followed_id', name=op.f('pk_follow'))
    )
    op.create_table('notification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('receiver_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['receiver_id'], ['user.id'], name=op.f('fk_notification_receiver_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_notification'))
    )
    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_notification_created_at'), ['created_at'], unique=False)

    op.create_table('photo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('filename', sa.String(length=64), nullable=False),
    sa.Column('filename_s', sa.String(length=64), nullable=False),
    sa.Column('filename_m', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('can_comment', sa.Boolean(), nullable=False),
    sa.Column('flag', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], name=op.f('fk_photo_author_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_photo'))
    )
    with op.batch_alter_table('photo', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_photo_created_at'), ['created_at'], unique=False)

    op.create_table('collection',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('photo_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['photo_id'], ['photo.id'], name=op.f('fk_collection_photo_id_photo'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_collection_user_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'photo_id', name=op.f('pk_collection'))
    )
    op.create_table('comment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('flag', sa.Integer(), nullable=False),
    sa.Column('replied_id', sa.Integer(), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('photo_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], name=op.f('fk_comment_author_id_user'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['photo_id'], ['photo.id'], name=op.f('fk_comment_photo_id_photo'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['replied_id'], ['comment.id'], name=op.f('fk_comment_replied_id_comment'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_comment'))
    )
    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_comment_created_at'), ['created_at'], unique=False)

    op.create_table('photo_tag',
    sa.Column('photo_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['photo_id'], ['photo.id'], name=op.f('fk_photo_tag_photo_id_photo'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], name=op.f('fk_photo_tag_tag_id_tag'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('photo_id', 'tag_id', name=op.f('pk_photo_tag'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('photo_tag')
    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_comment_created_at'))

    op.drop_table('comment')
    op.drop_table('collection')
    with op.batch_alter_table('photo', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_photo_created_at'))

    op.drop_table('photo')
    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notification_created_at'))

    op.drop_table('notification')
    op.drop_table('follow')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    op.drop_table('role_permission')
    with op.batch_alter_table('tag', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tag_name'))

    op.drop_table('tag')
    op.drop_table('role')
    op.drop_table('permission')
    # ### end Alembic commands ###
